@startuml

title __CONTROLLER's Class Diagram__\n

  namespace at.jku.se.controller {
    class at.jku.se.controller.HighScoreBoardController {
        {static} ~ MULTIP_FREI : int
        {static} ~ MULTIP_FREIF : int
        {static} ~ MULTIP_SAM : int
        {static} ~ POINTS_MINUS_CLICKS : int
        {static} ~ POINTS_MINUS_HINTS : int
        {static} ~ POINTS_MINUS_TIME : int
        {static} ~ SCORE_LEICHT : int
        {static} ~ SCORE_MITTEL : int
        {static} ~ SCORE_SCHWER : int
        ~ highScoreGameList : ObservableList<String>
        ~ lvHighScoreGames : ListView<String>
        ~ selected : String
        - btnBackHighMainMen : Button
        - ivSavegame : ImageView
        - lbDiff : Label
        - lbGameName : Label
        - lbGen : Label
        - lbPlayer : Label
        - lbScore : Label
        - lbTime : Label
        - lbVersion : Label
        + calculateScore()
        + fillListView()
        + handleButtonBackHighMainMen()
        + initialize()
    }
  }
  

  namespace at.jku.se.controller {
    class at.jku.se.controller.LoadGameController {
        ~ lvSaveGames : ListView
        ~ saveGameList : ObservableList<String>
        ~ selected : String
        - btnBackSavedMainMen : Button
        - btnContinue : Button
        - btnExport : Button
        - btnImport : Button
        - ivSavegame : ImageView
        - lbDifficulty : Label
        - lbGameName : Label
        - lbGenerate : Label
        - lbVersion : Label
        - root : AnchorPane
        + fillListView()
        + handleButtonBackSavedMainMen()
        + handleButtonDeleteGame()
        + handleButtonImportGame()
        + initialize()
    }
  }
  

  namespace at.jku.se.controller {
    class at.jku.se.controller.MainMenueController {
        - btnExit : Button
        - btnLoadGame : Button
        - btnNewGame : Button
        - root : AnchorPane
        + handleButtonExit()
        + handleButtonLoadGame()
        + handleButtonMainHighScores()
        + handleButtonNewGame()
        + initialize()
    }
  }
  

  namespace at.jku.se.controller {
    class at.jku.se.controller.NewGameController {
        ~ difficulty : String
        ~ generateType : String
        ~ version : String
        - btnContinue : Button
        - lbDifficulty : Label
        - rbSaFreiform : RadioButton
        - rbSaRegulaer : RadioButton
        - rbSaSamurai : RadioButton
        - rbSgAuto : RadioButton
        - rbSgManuell : RadioButton
        - rbSkEasy : RadioButton
        - rbSkHard : RadioButton
        - rbSkMedium : RadioButton
        - root : AnchorPane
        + handleButtonBackNewMainMen()
        + handleButtonContinue()
        + handleButtonSelfNewGame()
        + initialize()
    }
  }
  

  namespace at.jku.se.controller {
    class at.jku.se.controller.PlayfieldController {
        ~ diffculty : String
        ~ generateType : String
        ~ textFields : TextField[][]
        ~ version : String
        {static} - BTN_EASY : String
        {static} - BTN_FREIFORM : String
        {static} - BTN_HARD : String
        {static} - BTN_MEDIUM : String
        {static} - BTN_REGULAR : String
        {static} - BTN_SAMURAI : String
        - btnHint : Button
        - btnSolve : Button
        - playfield : GridPane
        - root : AnchorPane
        + handleButtonBacktoMain()
        + handleButtonHint()
        + handleButtonSaveGame()
        + handleButtonSolve()
        + initData()
        + initFirstNumbers()
        + initializePlayfield()
        + setStyle()
        - createGroups()
        - initFields()
        - initFreiformField()
        - initRegularField()
        - initSamuraiField()
    }
  }
  

  namespace at.jku.se.controller {
    class at.jku.se.controller.SudokuHelper {
        + defaultTextField()
        + getBoardSolution()
        + getCurrentBoard()
        + getHint()
        {static} + hideUnusedBoxes()
        + setNormalBoxesStyle()
        + solveBoard()
    }
  }
  

  at.jku.se.controller.HighScoreBoardController .up.|> javafx.fxml.Initializable
  at.jku.se.controller.LoadGameController .up.|> javafx.fxml.Initializable
  at.jku.se.controller.MainMenueController .up.|> javafx.fxml.Initializable
  at.jku.se.controller.NewGameController .up.|> javafx.fxml.Initializable
  at.jku.se.controller.PlayfieldController o-- at.jku.se.controller.SudokuHelper : h


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
